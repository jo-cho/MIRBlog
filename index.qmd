# 블로그 가이드

블로그 주인의 환영 글

> **이 블로그는 음악정보검색(Music Information Retrieval, MIR)의 입문자를 위해 만든 블로그입니다.** 음악정보검색 분야는 컴퓨터 기술과 인공지능 연구의 발달과 함께 유망한 연구 분야로 관심 받고 있습니다. 블로그 주인이 음악정보검색이라는 분야에 관심이 가지게 되며 혼자 공부한 내용을 스스로 정리해보고 이를 모두에게 공유하고자 블로그를 개설하였습니다. 방문해주셔서 감사합니다.

이 블로그에는 "음악정보검색 입문"이라는 [카테고리](listing.html) 하에 음악정보검색에 대해 정리한 내용과 이를 구현한 파이썬 코드로 구성된 글이 포스팅되어 있습니다. **대부분의 내용은 책 ["Fundamentals of Music Processing: Using Python and Jupyter Notebooks", Müller, Meinard.](https://books.google.co.kr/books/about/Fundamentals_of_Music_Processing.html?id=fYsoEAAAQBAJ)의 목차와 내용을 기반으로 합니다.** 이 내용을 토대로 한 데이터 분석 실험 및 응용 프로그램 등은 향후 포스트할 예정입니다.

> <b><span style="background-color:ivory; font-size:130%">**[ 블로그 글로 바로 넘어가기](listing.html)**</span></b>

---

블로그의 글은 목차 순서대로 읽는 것을 추천드립니다. 뒤쪽의 글들 중 앞의 내용을 알고 있다고 가정하고 서술한 내용이 많이 있습니다.

글의 목차는 다음과 같습니다. 목차를 클릭하면 해당 글로 이동합니다. 또한 왼쪽의 사이드바를 이용해 해당 목차로 넘어갈 수 있습니다.

## 음악정보검색 입문: 목차

### 1. 들어가며
음악정보검색(MIR)의 개념을 소개합니다.

[1.1. MIR은 무엇인가](https://jo-cho.github.io/MIRBlog/posts/1.%20Introduction/1.1.Introduction.html)


### 2. 음악 표현
음악의 표현(representation) 방법 3가지를 소개합니다.

[2.1. 악보 표현](https://jo-cho.github.io/MIRBlog/posts/2.%20Music%20Representation/2.1.Sheet_Music.html)

[2.2. 기호 표현](https://jo-cho.github.io/MIRBlog/posts/2.%20Music%20Representation/2.2.Symbolic_Representation.html)

[2.3. 오디오 표현](https://jo-cho.github.io/MIRBlog/posts/2.%20Music%20Representation/2.3.Audio_Representation.html)

    
### 3. 푸리에 변환
음악/오디오 처리의 기본이 되는 개념인 푸리에 변환(Fourier transform)에 대해 소개합니다.

[3.1. 복소수와 지수함수](https://jo-cho.github.io/MIRBlog/posts/3.%20Fourier%20Anaylsis%20of%20Signals/3.1.Math_Review.html)

[3.2. 이산 & 고속 푸리에 변환](https://jo-cho.github.io/MIRBlog/posts/3.%20Fourier%20Anaylsis%20of%20Signals/3.2.Discrete_Fourier_Transform.html)

[3.3. 단기 푸리에 변환 (1)](https://jo-cho.github.io/MIRBlog/posts/3.%20Fourier%20Anaylsis%20of%20Signals/3.3.Short-term_Fourier_Transform_1.html)

[3.4. 단기 푸리에 변환 (2)](https://jo-cho.github.io/MIRBlog/posts/3.%20Fourier%20Anaylsis%20of%20Signals/3.4.Short-term_Fourier_Transfrom_2.html)

[3.5. 디지털 신호](https://jo-cho.github.io/MIRBlog/posts/3.%20Fourier%20Anaylsis%20of%20Signals/3.5.Digital_Signals.html)
  
  
### 4. 음악 동기화
음악 간의 비교를 위한 동기화(synchronization)에 관한 내용을 소개합니다.

[4.1. 오디오 동기화 피쳐](https://jo-cho.github.io/MIRBlog/posts/4.%20Music%20Synchronization/4.1.Audio_Synchronization_Features.html)

[4.2. 동적 시간 워핑 (DTW)](https://jo-cho.github.io/MIRBlog/posts/4.%20Music%20Synchronization/4.2.Dynamic_Time_Warping.html)
    
    
### 5. 음악 구조 분석
음악 내의 구조(structure) 분석과 의미있는 분할(segmentation)에 대한 내용을 소개합니다.

[5.1. 음악 구조와 분할](https://jo-cho.github.io/MIRBlog/posts/5.%20Music%20Structure%20Analysis/5.1.Music_Structure_and_Segmentation.html)

[5.2. 자기 유사성 행렬 (SSM)](https://jo-cho.github.io/MIRBlog/posts/5.%20Music%20Structure%20Analysis/5.2.Self_Similarity_Matrix.html)
 
[5.3. 오디오 썸네일](https://jo-cho.github.io/MIRBlog/posts/5.%20Music%20Structure%20Analysis/5.3.Audio_Thumbnail.html)
 
[5.4. 노벨티 기반 분할](https://jo-cho.github.io/MIRBlog/posts/5.%20Music%20Structure%20Analysis/5.4.Novelty-Based_Segmentation.html)

[5.5. 음악 처리의 평가 방법](https://jo-cho.github.io/MIRBlog/posts/5.%20Music%20Structure%20Analysis/5.5.Evaluation.html)


### 6. 화음 인식
음악의 화성(harmony) 특징을 분석하기 위한 화음(chord) 인식을 소개합니다.

[6.1. 화성의 기본 이론](https://jo-cho.github.io/MIRBlog/posts/6.%20Chord%20Recognition/6.1.Basic_Theory_of_Harmony.html)

[6.2. 템플릿 기반 화음 인식](https://jo-cho.github.io/MIRBlog/posts/6.%20Chord%20Recognition/6.2.Template-Based_Chord_Recognition.html)

[6.3. HMM 기반 화음 인식](https://jo-cho.github.io/MIRBlog/posts/6.%20Chord%20Recognition/6.3.HMM-Based_Chord_Recognition.html)

[6.4. 화음 인식 예시: 비틀즈](https://jo-cho.github.io/MIRBlog/posts/6.%20Chord%20Recognition/6.4.Chord_Recognition_with_the_Beatles_Example.html)


### 7. 템포와 비트
음악의 템포(tempo) 특징을 분석하기 위한 방법을 소개합니다.

[7.1. 온셋 감지](https://jo-cho.github.io/MIRBlog/posts/7.%20Tempo%20and%20Beat%20Tracking/7.1.Onset_Detection.html)

[7.2. 템포 분석](https://jo-cho.github.io/MIRBlog/posts/7.%20Tempo%20and%20Beat%20Tracking/7.2.Tempo_Analysis.html)

[7.3. 비트와 펄스 추적](https://jo-cho.github.io/MIRBlog/posts/7.%20Tempo%20and%20Beat%20Tracking/7.3.Beat_and_Pulse_Tracking.html)


### 8. 내용 기반 음악 검색
오디오 내용(content)을 기반으로 한 음악 검색 방법을 소개합니다.

[8.1. 내용 기반 오디오 검색: 개요](https://jo-cho.github.io/MIRBlog/posts/8.%20Content-Based%20Audio%20Retrieval/8.1.Introduction.html)

[8.2. 오디오 식별](https://jo-cho.github.io/MIRBlog/posts/8.%20Content-Based%20Audio%20Retrieval/8.2.Audio_Identification.html)

[8.3. 오디오 매칭](https://jo-cho.github.io/MIRBlog/posts/8.%20Content-Based%20Audio%20Retrieval/8.3.Audio_Matching.html)

[8.4. 버전 식별](https://jo-cho.github.io/MIRBlog/posts/8.%20Content-Based%20Audio%20Retrieval/8.4.Version_Identification.html)

    
### 9. 오디오 분해
음악 정보를 토대로 한 오디오의 분해(decomposition) 방법을 소개합니다.

[9.1. 화성-타악 분리](https://jo-cho.github.io/MIRBlog/posts/9.%20Musically%20Informed%20Audio%20Decomposition/9.1.Harmonic–Percussive_Separation.html)

[9.2. 멜로디 추출](https://jo-cho.github.io/MIRBlog/posts/9.%20Musically%20Informed%20Audio%20Decomposition/9.2.Melody_Extraction.html)

[9.3. NMF 기반 오디오 분해](https://jo-cho.github.io/MIRBlog/posts/9.%20Musically%20Informed%20Audio%20Decomposition/9.3.NMF-Based_Audio_Decomposition.html)


---

이 블로그의 모든 글은 오직 교육용 목적입니다.

## 출처
- Müller, Meinard. Fundamentals of Music Processing: Using Python and Jupyter Notebooks. Springer Nature, 2021.
    - 블로그 글의 많은 부분이 이 책의 내용을 기반으로 합니다.
    - <img src="posts/1.%20Introduction/FMP_Teaser_Cover.png" width='400'>
    
- https://www.audiolabs-erlangen.de/resources/MIR/FMP/C0/C0.html
    - 이 사이트의 파이썬 노트북을 많은 부분 참고하고 있습니다. 사용된 오디오, 이미지, CSV 자료 등을 구할 수 있습니다. 
    - <img src="posts/1.%20Introduction/Logo_AudioLabs_Long.png" width='400'>

- https://musicinformationretrieval.com/
    
- https://github.com/meinardmueller/libfmp

**[About Me](https://jo-cho.github.io/MIRBlog/about.html)**